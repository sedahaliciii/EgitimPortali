@{
    ViewData["Title"] = "Kategori Düzenle";
    var categoryId = ViewBag.CategoryId;
}

<div class="container-fluid">
    <h1 class="h3 mb-2 text-gray-800">Kategori Düzenle</h1>
    <p class="mb-4">Bu sayfada kategori bilgilerini düzenleyebilirsiniz.</p>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Debug Bilgileri</h6>
        </div>
        <div class="card-body">
            <ul id="debugList"></ul>
            <button type="button" class="btn btn-sm btn-secondary" onclick="$('#debugList').empty();">Temizle</button>
        </div>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Kategori Bilgileri</h6>
        </div>
        <div class="card-body">
            <form id="editCategoryForm">
                <div class="form-group">
                    <label for="name">Kategori Adı</label>
                    <input type="text" class="form-control" id="name" name="name" required>
                </div>
                <div class="form-group">
                    <label for="description">Açıklama</label>
                    <textarea class="form-control" id="description" name="description" rows="3"></textarea>
                </div>
                <div class="alert alert-success" id="successMessage" style="display: none;">
                    Kategori başarıyla güncellendi!
                </div>
                <div class="alert alert-danger" id="errorMessage" style="display: none;">
                    Kategori güncellenirken bir hata oluştu!
                </div>
                <div class="form-group">
                    <a href="@Url.Action("Index", "Categories")" class="btn btn-secondary">Geri Dön</a>
                    <button type="submit" class="btn btn-primary">Kaydet</button>
                    <button type="button" id="getTestBtn" class="btn btn-info">GET Test Et</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function addDebug(message, isError = false) {
            var now = new Date().toLocaleTimeString();
            var li = $("<li>").text(`[${now}] ${message}`);
            if (isError) {
                li.css("color", "red").css("font-weight", "bold");
            }
            $("#debugList").append(li);
            console.log(message);
        }

        $(document).ready(function () {
            // API URL ve kimlik doğrulama bilgilerini ayarla
            var apiBaseUrl = '@ViewBag.ApiBaseUrl';
            if (!apiBaseUrl) {
                apiBaseUrl = 'https://localhost:7155'; // Fallback URL
                addDebug("ViewBag.ApiBaseUrl boş, varsayılan URL kullanılıyor", true);
            }

            var categoryId = @categoryId;
            var token = localStorage.getItem('token');

            // Debug bilgilerini ekle
            addDebug("API URL: " + apiBaseUrl);
            addDebug("Kategori ID: " + categoryId);
            addDebug("Token var mı: " + (token ? "Evet" : "Hayır"));

            // Kullanıcı rollerini kontrol et
            try {
                var roles = JSON.parse(localStorage.getItem('roles') || '[]');
                addDebug("Roller: " + (roles.length > 0 ? roles.join(', ') : "Rol bulunamadı"));

                if (!roles.includes('Admin')) {
                    addDebug("UYARI: Kullanıcının Admin rolü yok!", true);
                }
            } catch (e) {
                addDebug("Roller parse edilemedi: " + e.message, true);
            }

            // GET Test butonu
            $("#getTestBtn").click(function() {
                addDebug("GET testi yapılıyor...");

                $.ajax({
                    url: apiBaseUrl + '/api/Category/' + categoryId,
                    type: 'GET',
                    headers: {
                        'Authorization': 'Bearer ' + token
                    },
                    success: function (data) {
                        addDebug("GET test başarılı: " + JSON.stringify(data));
                    },
                    error: function (xhr, status, error) {
                        addDebug("GET test hatası: " + xhr.status + " " + error, true);
                    }
                });
            });

            // Kategori bilgilerini getir
            $.ajax({
                url: apiBaseUrl + '/api/Category/' + categoryId,
                type: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + token
                },
                success: function (category) {
                    addDebug("Kategori bilgileri alındı");
                    $('#name').val(category.name);
                    $('#description').val(category.description);
                },
                error: function (xhr, status, error) {
                    addDebug("Kategori bilgileri alınırken hata: " + xhr.status + " " + error, true);

                    if (xhr.responseText) {
                        addDebug("Yanıt: " + xhr.responseText, true);
                    }
                }
            });

            // Form gönderimi
            $('#editCategoryForm').submit(function (e) {
                e.preventDefault();

                var categoryData = {
                    name: $('#name').val(),
                    description: $('#description').val()
                };

                addDebug("Güncelleme isteği gönderiliyor: " + JSON.stringify(categoryData));

                $.ajax({
                    url: apiBaseUrl + '/api/Category/' + categoryId,
                    type: 'PUT',
                    headers: {
                        'Authorization': 'Bearer ' + token,
                        'Content-Type': 'application/json'
                    },
                    data: JSON.stringify(categoryData),
                    contentType: 'application/json',
                    success: function (response) {
                        addDebug("Güncelleme başarılı");
                        $('#successMessage').show();
                        $('#errorMessage').hide();

                        setTimeout(function() {
                            window.location.href = '@Url.Action("Index", "Categories")';
                        }, 2000);
                    },
                    error: function (xhr, status, error) {
                        addDebug("Güncelleme hatası: " + xhr.status + " " + error, true);

                        if (xhr.responseText) {
                            addDebug("Yanıt: " + xhr.responseText, true);
                        }

                        $('#errorMessage').text("Kategori güncellenirken hata: " + xhr.status).show();
                        $('#successMessage').hide();
                    }
                });
            });
        });
    </script>
}